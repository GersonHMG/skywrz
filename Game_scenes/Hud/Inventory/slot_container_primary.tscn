[gd_scene load_steps=6 format=2]

[ext_resource path="res://Art_resources/Items/wood.png" type="Texture" id=2]
[ext_resource path="res://Art_resources/Items/item_box.png" type="Texture" id=3]
[ext_resource path="res://Game_scenes/Hud/Inventory/item.gd" type="Script" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Panel

#---Nodes path---#
onready var item_node = get_node(\"z_index/item\")

#--------Item data--------#
var item_name = \"void\"
var item_quantity = 0
var max_stack = 0
var item_texture = null

func _process(delta):
	pass

func _ready():
	update_item()
	empty_slot()

func on_get_item(quantity):
	item_quantity += quantity

#Actualiza las ventanas de texto
func update_item():
	if item_name != \"void\":
		item_texture = load(\"res://Art_resources/Items/\"+item_name+\".png\")
	else:
		item_texture = null
	item_node.get_node(\"item_quantity\").text = str(item_quantity)
	item_node.get_node(\"item_name\").text = item_name
	item_node.get_node(\"item_sprite\").texture = item_texture

#Limpia la casilla
func empty_slot():
	item_quantity = 0
	item_name = \"void\"
	max_stack = 0
	item_texture = null
	update_item()

func on_give_item(object_referece, give_mode):
	
	#           = area2D -> item -> slot_container
	var object = object_referece.get_parent().get_parent().get_parent()
	if (object.has_method(\"on_get_item\")):
		if object.item_name == item_name:
			var missing_quantity = object.max_stack - object.item_quantity
			if give_mode == \"normal_drop\":
				if item_quantity <= missing_quantity:
					#Se dropea todo
					object.on_get_item(item_quantity)   #Lo que recive
					item_quantity -= item_quantity		#Lo que entrega
				else:
					#Se dropea lo faltante
					object.on_get_item(missing_quantity) #Lo que recive
					item_quantity -= missing_quantity	 #Lo que entrega
			elif give_mode == \"unity_drop\":
				if item_quantity > 0 and object.item_quantity < object.max_stack:
					object.on_get_item(1)				#Lo que recive
					item_quantity -= 1					#Lo que entrega
		elif object.item_name == \"void\":
			object.item_name = item_name
			object.max_stack = max_stack
			object.item_texture = item_texture
			if give_mode == \"normal_drop\":
				object.on_get_item(item_quantity)	    #Lo que recive
				item_quantity -= item_quantity			#Lo que entrega
			elif give_mode == \"unity_drop\":
				if item_quantity > 0:
					object.on_get_item(1)				#Lo que recive
					item_quantity -= 1       			#Lo que entrega
		if item_quantity <= 0:
			empty_slot()
		object.update_item()
		update_item()

######
func add_item(new_name, new_stack):
	item_name = new_name
	max_stack = new_stack
	item_quantity += 1
	update_item()
"

[sub_resource type="CircleShape2D" id=2]
radius = 14.71

[node name="slot_container" type="Panel"]
margin_right = 60.0
margin_bottom = 60.0
rect_min_size = Vector2( 60, 60 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="slot_sprite" type="NinePatchRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -1.0
margin_right = 2.0
margin_bottom = 3.0
rect_min_size = Vector2( 60, 60 )
texture = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="z_index" type="Node2D" parent="."]

[node name="item" type="Panel" parent="z_index"]
self_modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 60.0
margin_bottom = 60.0
rect_min_size = Vector2( 60, 60 )
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="item_sprite" type="NinePatchRect" parent="z_index/item"]
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 60, 60 )
texture = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="item_quantity" type="Label" parent="z_index/item"]
margin_left = 34.0
margin_top = 46.0
margin_right = 59.0
margin_bottom = 60.0
text = "0"
align = 2
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="item_name" type="Label" parent="z_index/item"]
visible = false
margin_left = -0.750637
margin_top = 49.1578
margin_right = 39.2493
margin_bottom = 63.1578
text = "None"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Area2D" type="Area2D" parent="z_index/item"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="z_index/item/Area2D"]
position = Vector2( 30.033, 29.1 )
shape = SubResource( 2 )
[connection signal="gui_input" from="z_index/item" to="z_index/item" method="_on_item_gui_input"]
[connection signal="mouse_entered" from="z_index/item" to="z_index/item" method="_on_item_mouse_entered"]
[connection signal="mouse_exited" from="z_index/item" to="z_index/item" method="_on_item_mouse_exited"]
[connection signal="area_entered" from="z_index/item/Area2D" to="z_index/item" method="_on_Area2D_area_entered"]
[connection signal="area_exited" from="z_index/item/Area2D" to="z_index/item" method="_on_Area2D_area_exited"]
